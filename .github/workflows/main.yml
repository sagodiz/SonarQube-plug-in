# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # subversions and other java versions might be added
        java: [11]
        
    name: Build SonarQube plug-in with JDK ${{ matrix.java }}
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      # Checks-out repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Checking out repository
        uses: actions/checkout@v2
        
      # Install the Java JDK with the specific Java version
      - name: Setup Java JDK version ${{ matrix.java }}
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ matrix.java }}

      # Runs the build script
      - name: Run the build python script
        run: python3 tools/build.py --dist
        
      - name: Saving plug-in JAR files
        uses: actions/upload-artifact@v2.2.2
        with:
          name: build_directory
          # sourcemeter-9.1-plugins-for-sonarqube-7.9-v2.0.1
          path: |
            build
            !build/**/*.md
            !build/**/*.html
            !build/**/*.tar.gz

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # subversions and other java versions might be added
        java: [11]
        
    name: Test SonarQube plug-in with JDK ${{ matrix.java }}
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Install the Java JDK with the specific Java version
      - name: Setup Java JDK version ${{ matrix.java }}
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ matrix.java }}
          
      # Checks-out repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Checking out repository
        uses: actions/checkout@v2
      
      # Install Pandoc dependency so build script does not fail
      - name: Installing Pandoc dependency
        run: |
          wget https://github.com/jgm/pandoc/releases/download/2.2.3.2/pandoc-2.2.3.2-linux.tar.gz -O /tmp/pandoc.tar.gz
          tar -xzf /tmp/pandoc.tar.gz
          export PATH="$PWD/pandoc-2.2.3.2/bin:$PATH"
          # sharing variable among steps as every step runs in different shell.
          echo "PATH=$PATH" >> $GITHUB_ENV
          
      # Runs the testing script
      - name: Run regression tests
        run: python3 tools/run-test.py --init --print-log -sv 7.9.3 -scv 4.2.0.1873
        
  test_web_api:
    needs: [build]
    name: Testing SM metrics via web API
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # subversions and other java versions might be added
        java: [11]
        
    steps:
      - name: Checking out repository
        uses: actions/checkout@v2
      
      # Install the Java JDK with the specific Java version
      - name: Setup Java JDK version ${{ matrix.java }}
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ matrix.java }}
          
        # downloading build directory with all the jars so no build step has to be done
      - name: Download build directory
        uses: actions/download-artifact@v2
        with:
          name: build_directory
        
      - name: Extracting build directory
        run: |
          echo "PWD $PWD"
          ls -l
        
      - name: Running code analyzis
        run: |
          echo 'TODO checking out a directory with sample code and running code analyzis on that'
        
      - name: Checking API results
        run: |
          echo "Getting JSON from web API and check its value"

    
